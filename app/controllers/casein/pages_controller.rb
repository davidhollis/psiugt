# Scaffolding generated by Casein v5.1.1.5

module Casein
  class PagesController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Pages'
      @root_pages = Page.roots.order(:title)
    end
    
    def titles
      @pages = Page.all.paginate page: params[:page]
      
      respond_to do |format|
        format.json { render json:
          @pages.map { |page| {
            title: page.title,
            path: page.path
          }}
        }
      end
    end
  
    def show
      @casein_page_title = 'View page'
      @page = Page.find params[:id]
    end
  
    def new
      @casein_page_title = 'Add a new page'
    	@page = Page.new
      @page.parent_id = params[:parent_id]
    end

    def create
      @page = Page.new page_params
    
      if @page.save
        flash[:notice] = 'Page created'
        redirect_to casein_pages_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new page'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update page'
      
      @page = Page.find params[:id]
    
      if @page.update_attributes page_params
        flash[:notice] = 'Page has been updated'
        redirect_to casein_pages_path
      else
        flash.now[:warning] = 'There were problems when trying to update this page'
        render :action => :show
      end
    end
 
    def destroy
      @page = Page.find params[:id]

      @page.destroy
      flash[:notice] = 'Page has been deleted'
      redirect_to casein_pages_path
    end
    
    def image_upload
      image_io = params[:image]
      image_file_extension = image_io.original_filename.split(/\./).last
      s3_file = RemoteFile.create_from io: image_io,
        role: :image,
        suffix: ".#{image_file_extension}"
      
      respond_to do |format|
        format.json { render json: {
          image_url: s3_file.url
        }}
      end
    end
  
    private
      
      def page_params
        base_params = params.require(:page).permit(:title, :slug, :published, :body, :sidebar, :parent_id)
      end

  end
end